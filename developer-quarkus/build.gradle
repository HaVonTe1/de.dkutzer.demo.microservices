plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.3.72"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.72"
    id 'io.quarkus'
}


repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {


    implementation 'io.quarkus:quarkus-smallrye-metrics'
    implementation 'io.quarkus:quarkus-smallrye-health'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'io.quarkus:quarkus-scheduler'
    implementation 'io.quarkus:quarkus-rest-client'
    implementation 'io.quarkus:quarkus-oidc'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-smallrye-reactive-messaging-kafka'
    implementation 'io.quarkus:quarkus-keycloak-authorization'
    implementation 'io.quarkus:quarkus-mongodb-client'
    implementation 'io.quarkus:quarkus-smallrye-opentracing'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'io.quarkus:quarkus-jackson'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'io.quarkus:quarkus-test-security'
    testImplementation "org.testcontainers:testcontainers:1.15.0-rc2"
    testImplementation "org.testcontainers:junit-jupiter:1.15.0-rc2"
    testImplementation "org.testcontainers:mongodb:1.15.0-rc2"
    testImplementation("au.com.dius:pact-jvm-provider-junit5:${property("pactVersion")}")
}

group 'de.dkutzer.buggy'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

quarkus {
    setOutputDirectory("$projectDir/build/classes/kotlin/main")
}

quarkusDev {
    setSourceDir("$projectDir/src/main/kotlin")
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}


quarkusBuild {
    nativeArgs {
        containerBuild = true
        buildImage = "quay.io/quarkus/ubi-quarkus-native-image:20.2.0-java11"
    }
}